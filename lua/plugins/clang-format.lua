vim.cmd[[
	let g:clang_format#style_options = { "AccessModifierOffset" : -4, "AlignAfterOpenBracket" : "Align", "AlignConsecutiveAssignments" : "false", "AlignConsecutiveDeclarations" : "false", "AlignEscapedNewlines" : "Right", "AlignOperands" : "true", "AlignTrailingComments" : "true", "AllowAllParametersOfDeclarationOnNextLine" : "false", "AllowShortBlocksOnASingleLine" : "true", "AllowShortCaseLabelsOnASingleLine" : "true", "AllowShortFunctionsOnASingleLine" : "All", "AllowShortIfStatementsOnASingleLine" : "true", "AllowShortLoopsOnASingleLine" : "false", "AlwaysBreakAfterDefinitionReturnType" : "None", "AlwaysBreakAfterReturnType" : "None", "AlwaysBreakBeforeMultilineStrings" : "false", "AlwaysBreakTemplateDeclarations" : "true", "BinPackArguments" : "false", "BinPackParameters" : "false", "BreakBeforeBinaryOperators" : "None", "BreakBeforeBraces" : "Attach", "BreakBeforeTernaryOperators" : "false", "BreakConstructorInitializersBeforeComma" : "false", "BreakConstructorInitializers" : "BeforeColon", "ColumnLimit" : 0, "CompactNamespaces" : "false", "ConstructorInitializerAllOnOneLineOrOnePerLine" : "false", "ConstructorInitializerIndentWidth" : 4, "ContinuationIndentWidth" : 4, "Cpp11BracedListStyle" : "true", "DerivePointerAlignment" : "false", "DisableFormat" : "false", "ExperimentalAutoDetectBinPacking" : "false", "IndentCaseLabels" : "true", "IndentPPDirectives" : "AfterHash", "IndentWidth" : 4, "IndentWrappedFunctionNames" : "false", "KeepEmptyLinesAtTheStartOfBlocks" : "true", "MaxEmptyLinesToKeep" : 1, "NamespaceIndentation" : "Inner", "ObjCBlockIndentWidth" : 4, "ObjCSpaceAfterProperty" : "false", "ObjCSpaceBeforeProtocolList" : "true", "PenaltyBreakBeforeFirstCallParameter" : 19, "PenaltyBreakComment" : 300, "PenaltyBreakFirstLessLess" : 120, "PenaltyBreakString" : 1000, "PenaltyExcessCharacter" : 1000000, "PenaltyReturnTypeOnItsOwnLine" : 60, "PointerAlignment" : "Right", "ReflowComments" : "true", "SortIncludes" : "true", "SpaceAfterCStyleCast" : "false", "SpaceAfterTemplateKeyword" : "true", "SpaceBeforeAssignmentOperators" : "true", "SpaceBeforeParens" : "ControlStatements", "SpaceInEmptyParentheses" : "false", "SpacesBeforeTrailingComments" : 1, "SpacesInAngles" : "false", "SpacesInContainerLiterals" : "false", "SpacesInCStyleCastParentheses" : "false", "SpacesInParentheses" : "false", "SpacesInSquareBrackets" : "false", "Standard" : "Auto", "TabWidth" : 4, "UseTab" : "ForIndentation"}
	let g:clang_format#auto_format = 1
]]